version: '3.5'

services:
  # meant for manual runs only
  cmd-recreate-buckets:
    image: "minio/mc:RELEASE.2020-07-17T02-52-20Z"
    # TODO: implement better logic to wait for s3-server to startup before running entrypoint cmd's
    entrypoint: >
      /bin/sh -c "
      sleep 15s;
      mc config host add s3-server http://s3-server:9000 dev-access-key dev-secret-key;
      mc rm -r --force s3-server/advana-raw-zone;
      mc rm -r --force s3-server/advana-trusted-zone;
      mc mb s3-server/advana-raw-zone;
      mc mb s3-server/advana-trusted-zone;
      exit 0;
      "
    networks:
      - app-net

  cmd-recreate-postgres-tables:
    image: postgres:9.6.19-alpine
    entrypoint: >
      /bin/sh -c "
      sleep 15s;
      psql -f /gc_db_utils/orch/sql/drop_tables.sql postgresql://postgres:password@postgres;
      psql -f /gc_db_utils/orch/sql/create_tables.sql postgresql://postgres:password@postgres;
      psql -f /gc_db_utils/orch/sql/drop_views.sql postgresql://postgres:password@postgres;
      psql -f /gc_db_utils/orch/sql/create_views.sql postgresql://postgres:password@postgres;
      psql -f /gc_db_utils/web/sql/drop_tables.sql postgresql://postgres:password@postgres;
      psql -f /gc_db_utils/web/sql/create_tables.sql postgresql://postgres:password@postgres;
      psql -f /gc_db_utils/web/sql/drop_views.sql postgresql://postgres:password@postgres;
      psql -f /gc_db_utils/web/sql/create_views.sql postgresql://postgres:password@postgres;
      exit 0;
      "
    volumes:
      - ../../dataPipelines/gc_db_utils:/gc_db_utils
    networks:
      - app-net

#  cmd-ensure-baseline-image:
#    image: "gc_common_baseline:latest"
#    build:
#      context: "../"
#      dockerfile: "dev/docker/core/base-env/Dockerfile"
#    entrypoint:
#      "echo [OK] gc_common_baseline:latest image is present"

networks:
  app-net:
    name: "${COMPOSE_PROJECT_NAME:-gc-dev}-network"